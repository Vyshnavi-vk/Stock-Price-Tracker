{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const UpdatePerMinute=_ref=>{let{price}=_ref;const[data,setData]=useState(price);const[prev,setPrev]=useState(price);let prevPrice=price;useEffect(()=>{const interval=setInterval(()=>{let random=Number.parseFloat(Math.floor(Math.random()*(97.6- -97.1+1))+-97.1);console.log(Number(price)+random+\",\"+prevPrice);setPrev(prevPrice);setData(Number(price)+random);prevPrice=Number(price)+random;},60000);// Clearing the interval \nreturn()=>clearInterval(interval);},[price]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"h1\",{style:{color:parseFloat(data)>parseFloat(prev)?'green':'red'},children:data})});};export default UpdatePerMinute;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","Fragment","_Fragment","UpdatePerMinute","_ref","price","data","setData","prev","setPrev","prevPrice","interval","setInterval","random","Number","parseFloat","Math","floor","console","log","clearInterval","children","style","color"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Projects/Mini Stock Price Tracker/client/src/UpdatePerMinute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst UpdatePerMinute = ({ price }) => {\r\n    const [data, setData] = useState(price)\r\n    const [prev, setPrev] = useState(price)\r\n    let prevPrice = price\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            let random = Number.parseFloat((Math.floor(Math.random() * (97.6 - (-97.1) + 1))) + -97.1)\r\n            console.log(Number(price) + random + \",\" + prevPrice)\r\n            setPrev(prevPrice)\r\n            setData(Number(price) + random)\r\n            prevPrice = (Number(price) + random)\r\n        }, 60000);\r\n\r\n        // Clearing the interval \r\n        return () => clearInterval(interval);\r\n    }, [price]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1\r\n                style={{\r\n                    color: parseFloat(data) > parseFloat(prev) ? 'green' : 'red'\r\n                }}\r\n\r\n\r\n            >{data}\r\n            </h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdatePerMinute\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAGlD,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAACO,KAAK,CAAC,CACvC,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAACO,KAAK,CAAC,CACvC,GAAI,CAAAK,SAAS,CAAGL,KAAK,CAErBR,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAc,QAAQ,CAAGC,WAAW,CAAC,IAAM,CAC/B,GAAI,CAAAC,MAAM,CAAGC,MAAM,CAACC,UAAU,CAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACH,MAAM,CAAC,CAAC,EAAI,IAAI,CAAI,EAAC,IAAK,CAAG,CAAC,CAAC,CAAC,CAAI,CAAC,IAAI,CAAC,CAC1FK,OAAO,CAACC,GAAG,CAACL,MAAM,CAACT,KAAK,CAAC,CAAGQ,MAAM,CAAG,GAAG,CAAGH,SAAS,CAAC,CACrDD,OAAO,CAACC,SAAS,CAAC,CAClBH,OAAO,CAACO,MAAM,CAACT,KAAK,CAAC,CAAGQ,MAAM,CAAC,CAC/BH,SAAS,CAAII,MAAM,CAACT,KAAK,CAAC,CAAGQ,MAAO,CACxC,CAAC,CAAE,KAAK,CAAC,CAET;AACA,MAAO,IAAMO,aAAa,CAACT,QAAQ,CAAC,CACxC,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CAIX,mBACIL,IAAA,CAAAE,SAAA,EAAAmB,QAAA,cACIrB,IAAA,OACIsB,KAAK,CAAE,CACHC,KAAK,CAAER,UAAU,CAACT,IAAI,CAAC,CAAGS,UAAU,CAACP,IAAI,CAAC,CAAG,OAAO,CAAG,KAC3D,CAAE,CAAAa,QAAA,CAGJf,IAAI,CACF,CAAC,CACP,CAAC,CAEX,CAAC,CAED,cAAe,CAAAH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}