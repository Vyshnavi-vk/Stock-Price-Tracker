{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\OneDrive\\\\Desktop\\\\Projects\\\\Mini Stock Price Tracker\\\\client\\\\src\\\\Poll.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Poll = ({\n  price\n}) => {\n  _s();\n  const [data, setData] = useState(price);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let negValues = Math.floor(Math.random() * 2);\n      let random = Math.floor(Math.random() * 10) * console.log(Number(price) + random);\n      setData(Number(price) + random);\n    }, 2000);\n\n    // Clearing the interval \n    return () => clearInterval(interval);\n  }, [price]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Poll, \"Ko1Wf4rMPVCcD46MmKJSPNuUiMQ=\");\n_c = Poll;\nexport default Poll;\nvar _c;\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Poll","price","_s","data","setData","interval","setInterval","negValues","Math","floor","random","console","log","Number","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/OneDrive/Desktop/Projects/Mini Stock Price Tracker/client/src/Poll.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\n\r\nconst Poll = ({ price }) => {\r\n    const [data, setData] = useState(price)\r\n\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            let negValues = Math.floor(Math.random() * 2)\r\n            let random = Math.floor(Math.random() * 10) * \r\n            console.log(Number(price) + random)\r\n            setData(Number(price) + random)\r\n\r\n        }, 2000);\r\n\r\n        // Clearing the interval \r\n        return () => clearInterval(interval);\r\n    }, [price]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>{data}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Poll\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACM,KAAK,CAAC;EAGvCP,SAAS,CAAC,MAAM;IACZ,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7C,IAAIA,MAAM,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAC3CC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACZ,KAAK,CAAC,GAAGS,MAAM,CAAC;MACnCN,OAAO,CAACS,MAAM,CAACZ,KAAK,CAAC,GAAGS,MAAM,CAAC;IAEnC,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMI,aAAa,CAACT,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAMX,oBACIJ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACIlB,OAAA;MAAAkB,QAAA,EAAKZ;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBACjB,CAAC;AAEX,CAAC;AAAAjB,EAAA,CA1BKF,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA4BV,eAAeA,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}